apiVersion: v1
kind: PersistentVolume
metadata:
  name: docker-registry-pv
spec:
  persistentVolumeReclaimPolicy: Retain
  capacity:
    storage: 25G
  accessModes:
  - ReadWriteMany
  nfs:
    path: /storage-pool/k8s/docker-registry
    server: 192.168.1.8
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: docker-registry-pvc
spec:
  volumeName: docker-registry-pv
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 25G
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry-deployment
  labels:
    app: docker-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-registry
  template:
    metadata:
      labels:
        app: docker-registry
    spec:
      containers:
      - name: docker-registry
        image: registry:2.7.1
        ports:
        - containerPort: 5000
          name: main
        volumeMounts:
        - name: registry-storage
          mountPath: /var/lib/registry
      - name: docker-registry-ui
        image: joxit/docker-registry-ui:static
        env:
        - name: "URL"
          value: "https://registry.thedutchmc.nl"
        - name: "REGISTRY_TITLE"
          value: "TheDutchMC Docker Registry"
        ports:
        - containerPort: 80
          name: interface
      volumes:
      - name: registry-storage
        persistentVolumeClaim:
          claimName: docker-registry-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: docker-registry-service
spec:
  selector:
    app: docker-registry
  ports:
  - protocol: TCP
    name: main
    port: 443
    targetPort: 5000
  - protocol: TCP
    name: interface
    port: 80
    targetPort: 80
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: docker-registry-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-body-size: 1024m
    nginx.ingress.kubernetes.io/enable-cors: "true"    
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
spec:
  tls:
  - hosts:
    - registry.thedutchmc.nl
    secretName: wildcard-thedutchmc-nl-tls-secret
  rules:
  - host: "registry.thedutchmc.nl"
    http:
      paths:
      - backend:
          serviceName: docker-registry-service
          servicePort: 443
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: docker-dashboard-registry-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
spec:
  tls:
  - hosts:
    - dashboard.registry.thedutchmc.nl
    secretName: dashboard-registry-thedutchmc-nl-tls-secret
  rules:
  - host: "dashboard.registry.thedutchmc.nl"
    http:
      paths:
      - backend:
          serviceName: docker-registry-service
          servicePort: 80
